# User phing to privision this file
version: "2"

services:
  # web container with apache and php-fpm
  # test: curl -v http://localhost
  web:
    image: {{WEB_CONTAINER}}
    container_name: {{WEB_CONTAINER_NAME}}
    links:
      - mysql
    volumes:
      # mounts production 'multisite' sources to container in readonly mode! "warning 'think before you type'"
      # - {{WEB_HOST_SOURCES}}:{{WEB_CONTAINER_SOURCES}}
      # mounts production project '/files' to container in readonly mode
      #- {{WEB_HOST_FILES}}:{{WEB_CONTAINER_FILES}}:ro
      # mounts build related 'test' release to container
      #- {{WEB_HOST_RELEASE}}/platform:{{WEB_CONTAINER_RELEASE}}
      # mounts multisite specific 'sites.php' to container
      # - {{WEB_HOST_SITES_PHP}}:{{WEB_CONTAINER_RELEASE}}/sites/sites.php
      # mounts site drupal data to container
      # - {{WEB_HOST_SITE}}:{{WEB_CONTAINER_SITE}}
      # mounts build specific 'settings.php' to container
      # - {{WEB_HOST_SETTINGS}}:{{WEB_CONTAINER_SETTINGS}}
    # Internal network access
    # * created: docker network create INT --internal=true
    networks:
      - INT

  # privoxy "proxy server" container (depend on web container and its name)
  # test: curl -x http://localhost:8118 http://ec.europa.eu
  #proxy:
  #  image: {{PRIVOXY_CONTAINER}}
  #  container_name: {{PRIVOXY_CONTAINER_NAME}}
  #  ports:
  #    - {{PRIVOXY_CONTAINER_EXT_PORT}}:{{PRIVOXY_CONTAINER_INT_PORT}}
  #  links:
  #    - web
    # Internal & External network access
    # * created: $ docker network create EXT --internal=false
    # * created: $ docker network create INT --internal=true
  #  networks:
  #    - INT
  #    - EXT


  # database server (mysql or mariadb)
  # test: mysql -udev -pved mydev -e 'show tables;'
  mysql:
    image: {{MYSQL_CONTAINER}}
    container_name: {{MYSQL_CONTAINER_NAME}}
    environment:
      - MYSQL_DATABASE={{MYSQL_DATABASE}}
      - MYSQL_USER={{MYSQL_USER}}
      - MYSQL_PASSWORD={{MYSQL_PASSWORD}}
      - MYSQL_ROOT_PASSWORD={{MYSQL_ROOT_PASSWORD}}
    ports:
      - "3306:3306"
  #    - {{MYSQL_CONTAINER_EXT_PORT}}:{{MYSQL_CONTAINER_INT_PORT}}
  #  volumes:
  #    - {{MYSQL_HOST_DATA}}:{{MYSQL_CONTAINER_DATA}}
    # Internal network access
    # * created: docker network create INT --internal=true
    networks:
      - INT

  tools:
    image: {{TOOLS_CONTAINER}}
    container_name: {{TOOLS_CONTAINER_NAME}}
    stdin_open: true
    tty: true
    links:
      - proxy
      - mysql
      - web
    volumes:
      - {{WEB_HOST_RELEASE}}:/app
      - {{WEB_HOST_FILES}}:{{WEB_CONTAINER_FILES}}:ro
    networks:
      - INT

# networks details
networks:
  EXT:
    external: true
  INT:
    external: true


